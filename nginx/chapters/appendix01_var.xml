<appendix><title>变量</title>
  <para>nginx中有很多“嵌入式变量<parameter>Embedded Variables</parameter>”。nginx是模块化的，不同的模块中有不同的一些变量。大部分都在<filename>ngx_http_core_module</filename>模块中。这些变量有时候会作为判断条件出现在配置文件中、有时会作为占位符出现在配置文件中、有时会作为一个被记录的日志字段。所有的变量可以参考如下链接：<link xlink:href="https://nginx.org/en/docs/varindex.html"></link></para>
  <para>为方便查阅，我们对所有的变量按照所属模块，做了一个简单的梳理，并用表格的形式进行了汇总。</para>
  
  <orderedlist>  
    <listitem><emphasis>ngx_http_core_module中的变量</emphasis>
      <para>nginx所有的变量是与apache httpd web server的变量是匹配或一致的。</para>
  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_core_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_core_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$arg_name</entry>
            <entry>argument name in the request line</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$args</entry>
            <entry>arguments in the request line</entry>
          </row>
          <row>
            <entry>3</entry>
            <entry>$binary_remote_addr</entry>
            <entry>client address in a binary form, value’s length is always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses</entry>
          </row>
          <row>
            <entry>4</entry>
            <entry>$body_bytes_sent</entry>
            <entry>number of bytes sent to a client, not counting the response header; this variable is compatible with the “%B” parameter of the mod_log_config Apache module</entry>
          </row>
          <row>
            <entry>5</entry>
            <entry>$bytes_sent</entry>
            <entry>number of bytes sent to a client (1.3.8, 1.2.5)</entry>
          </row>
          <row>
            <entry>6</entry>
            <entry>$connection</entry>
            <entry>connection serial number (1.3.8, 1.2.5)</entry>
          </row>
          <row>
            <entry>7</entry>
            <entry>$connection_requests</entry>
            <entry>current number of requests made through a connection (1.3.8, 1.2.5)</entry>
          </row>
          <row>
            <entry>8</entry>
            <entry>$connection_time</entry>
            <entry>connection time in seconds with a milliseconds resolution (1.19.10)</entry>
          </row>
          <row>
            <entry>9</entry>
            <entry>$content_length</entry>
            <entry>“Content-Length” request header field</entry>
          </row>
          <row>
            <entry>10</entry>
            <entry>$content_type</entry>
            <entry>“Content-Type” request header field</entry>
          </row>
          <row>
            <entry>11</entry>
            <entry>$cookie_name</entry>
            <entry>the name cookie</entry>
          </row>
          <row>
            <entry>12</entry>
            <entry>$document_root</entry>
            <entry>root or alias directive’s value for the current request</entry>
          </row>
          <row>
            <entry>13</entry>
            <entry>$document_uri</entry>
            <entry>same as $uri</entry>
          </row>
          <row>
            <entry>14</entry>
            <entry>$host</entry>
            <entry>in this order of precedence: host name from the request line, or host name from the “Host” request header field, or the server name matching a request</entry>
          </row>
          <row>
            <entry>15</entry>
            <entry>$hostname</entry>
            <entry>host name</entry>
          </row>
          <row>
            <entry>16</entry>
            <entry>$http_name</entry>
            <entry>arbitrary request header field; the last part of a variable name is the field name converted to lower case with dashes replaced by underscores</entry>
          </row>
          <row>
            <entry>17</entry>
            <entry>$https</entry>
            <entry>“on” if connection operates in SSL mode, or an empty string otherwise</entry>
          </row>
          <row>
            <entry>18</entry>
            <entry>$is_args</entry>
            <entry>“?” if a request line has arguments, or an empty string otherwise</entry>
          </row>
          <row>
            <entry>19</entry>
            <entry>$limit_rate</entry>
            <entry>setting this variable enables response rate limiting; see limit_rate</entry>
          </row>
          <row>
            <entry>20</entry>
              <entry>$msec</entry>
            <entry>current time in seconds with the milliseconds resolution (1.3.9, 1.2.6)</entry>
          </row>
          <row>
            <entry>21</entry>
            <entry>$nginx_version</entry>
            <entry>nginx version</entry>
          </row>
          <row>
            <entry>22</entry>
            <entry>$pid</entry>
            <entry>PID of the worker process</entry>
          </row>
          <row>
            <entry>23</entry>
            <entry>$pipe</entry>
            <entry>“p” if request was pipelined, “.” otherwise (1.3.12, 1.2.7)</entry>
          </row>
          <row>
            <entry>24</entry>
            <entry>$proxy_protocol_addr</entry>
            <entry>client address from the PROXY protocol header (1.5.12)
The PROXY protocol must be previously enabled by setting the proxy_protocol parameter in the listen directive.</entry>
          </row>
          <row>
            <entry>25</entry>
            <entry>$proxy_protocol_port</entry>
            <entry>client port from the PROXY protocol header (1.11.0)
The PROXY protocol must be previously enabled by setting the proxy_protocol parameter in the listen directive.</entry>
          </row>
          <row>
            <entry>26</entry>
            <entry>$proxy_protocol_server_addr</entry>
            <entry>server address from the PROXY protocol header (1.17.6)
The PROXY protocol must be previously enabled by setting the proxy_protocol parameter in the listen directive.</entry>
          </row>
          <row>
            <entry>27</entry>
            <entry>$proxy_protocol_server_port</entry>
            <entry>server port from the PROXY protocol header (1.17.6)
The PROXY protocol must be previously enabled by setting the proxy_protocol parameter in the listen directive.</entry>
          </row>
          <row>
            <entry>28</entry>
            <entry>$query_string</entry>
            <entry>same as $args</entry>
          </row>
          <row>
            <entry>29</entry>
            <entry>$realpath_root</entry>
            <entry>an absolute pathname corresponding to the root or alias directive’s value for the current request, with all symbolic links resolved to real paths</entry>
          </row>
          <row>
            <entry>30</entry>
            <entry>$remote_addr</entry>
            <entry>client address</entry>
          </row>
          <row>
            <entry>31</entry>
            <entry>$remote_port</entry>
            <entry>client port</entry>
          </row>
          <row>
            <entry>32</entry>
            <entry>$remote_user</entry>
            <entry>user name supplied with the Basic authentication</entry>
          </row>
          <row>
            <entry>33</entry>
            <entry>$request</entry>
            <entry>full original request line</entry>
          </row>
          <row>
            <entry>34</entry>
            <entry>$request_body</entry>
            <entry>request body
The variable’s value is made available in locations processed by the proxy_pass, fastcgi_pass, uwsgi_pass, and scgi_pass directives when the request body was read to a memory buffer.</entry>
          </row>
          <row>
            <entry>35</entry>
            <entry>$request_body_file</entry>
            <entry>name of a temporary file with the request body
At the end of processing, the file needs to be removed. To always write the request body to a file, client_body_in_file_only needs to be enabled. When the name of a temporary file is passed in a proxied request or in a request to a FastCGI/uwsgi/SCGI server, passing the request body should be disabled by the proxy_pass_request_body off, fastcgi_pass_request_body off, uwsgi_pass_request_body off, or scgi_pass_request_body off directives, respectively.</entry>
          </row>
          <row>
            <entry>36</entry>
            <entry>$request_completion</entry>
            <entry>“OK” if a request has completed, or an empty string otherwise</entry>
          </row>
          <row>
            <entry>37</entry>
            <entry>$request_method</entry>
            <entry>request method, usually “GET” or “POST”</entry>
          </row>
          <row>
            <entry>38</entry>
            <entry>$request_time</entry>
            <entry>request processing time in seconds with a milliseconds resolution (1.3.9, 1.2.6); time elapsed since the first bytes were read from the client</entry>
          </row>
          <row>
            <entry>39</entry>
            <entry>$request_uri</entry>
            <entry>full original request URI (with arguments)</entry>
          </row>
          <row>
            <entry>40</entry>
            <entry>$scheme</entry>
            <entry>request scheme, “http” or “https”</entry>
          </row>
          <row>
            <entry>41</entry>
            <entry>$sent_http_name</entry>
            <entry>arbitrary response header field; the last part of a variable name is the field name converted to lower case with dashes replaced by underscores</entry>
          </row>
          <row>
            <entry>42</entry>
            <entry>$sent_trailer_name</entry>
            <entry>arbitrary field sent at the end of the response (1.13.2); the last part of a variable name is the field name converted to lower case with dashes replaced by underscores</entry>
          </row>
          <row>
            <entry>43</entry>
            <entry>$server_addr</entry>
            <entry>an address of the server which accepted a request
Computing a value of this variable usually requires one system call. To avoid a system call, the listen directives must specify addresses and use the bind parameter.</entry>
          </row>
          <row>
            <entry>44</entry>
            <entry>$server_name</entry>
            <entry>name of the server which accepted a request</entry>
          </row>
          <row>
            <entry>45</entry>
            <entry>$server_port</entry>
            <entry>port of the server which accepted a request</entry>
          </row>
          <row>
            <entry>46</entry>
            <entry>$server_protocol</entry>
            <entry>request protocol, usually “HTTP/1.0”, “HTTP/1.1”, or “HTTP/2.0”</entry>
          </row>
          <row>
            <entry>47</entry>
            <entry>$status</entry>
            <entry>response status (1.3.2, 1.2.2)</entry>
          </row>
          <row>
            <entry>48</entry>
            <entry>$tcpinfo_rtt, $tcpinfo_rttvar, $tcpinfo_snd_cwnd, $tcpinfo_rcv_space</entry>
            <entry>information about the client TCP connection; available on systems that support the TCP_INFO socket option</entry>
          </row>
          <row>
            <entry>49</entry>
            <entry>$time_iso8601</entry>
            <entry>local time in the ISO 8601 standard format (1.3.12, 1.2.7)</entry>
          </row>
          <row>
            <entry>50</entry>
            <entry>$time_local</entry>
            <entry>local time in the Common Log Format (1.3.12, 1.2.7)</entry>
          </row>
          <row>
            <entry>51</entry>
            <entry>$uri</entry>
            <entry>current URI in request, normalized
The value of $uri may change during request processing, e.g. when doing internal redirects, or when using index files.</entry>
          </row>
          <row>
            <entry>52</entry>
            <entry>$http_user_agent</entry>
            <entry>The User-Agent request header is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent.</entry>
          </row>
          <row>
            <entry>53</entry>
            <entry>$http_cookie</entry>
            <entry>web cookie</entry>
          </row>

        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    
    <listitem><emphasis>ngx_http_auth_jwt_module中的变量</emphasis>
  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_auth_jwt_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$jwt_header_name</entry>
            <entry>returns the value of a specified JOSE header</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$jwt_claim_name</entry>
            <entry>returns the value of a specified JWT claim</entry>
          </row>
          <row>
            <entry>3</entry>
            <entry>$jwt_payload</entry>
            <entry>returns the decrypted top-level payload of nested or encrypted tokens (1.21.2). For nested tokens returns the enclosed JWS token. For encrypted tokens returns JSON with claims.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_fastcgi_module中的变量</emphasis>

  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_fastcgi_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$fastcgi_script_name</entry>
            <entry>request URI or, if a URI ends with a slash, request URI with an index file name configured by the fastcgi_index directive appended to it. This variable can be used to set the SCRIPT_FILENAME and PATH_TRANSLATED parameters that determine the script name in PHP. For example, for the “/info/” request with the following directives</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$fastcgi_path_info</entry>
            <entry>the value of the second capture set by the fastcgi_split_path_info directive. This variable can be used to set the PATH_INFO parameter.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    
    <listitem><emphasis>ngx_http_gzip_module中的变量</emphasis>

  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_gzip_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_gzip_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$gzip_ratio</entry>
            <entry>achieved compression ratio, computed as the ratio between the original and compressed response sizes.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    
    <listitem><emphasis>ngx_http_limit_conn_module中的变量</emphasis>

  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_limit_conn_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$limit_conn_status</entry>
            <entry>keeps the result of limiting the number of connections (1.17.6): PASSED, REJECTED, or REJECTED_DRY_RUN</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    
    <listitem><emphasis>ngx_http_limit_req_module中的变量</emphasis>

  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_limit_req_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_limit_req_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$limit_req_status</entry>
            <entry>keeps the result of limiting the request processing rate (1.17.6): PASSED, DELAYED, REJECTED, DELAYED_DRY_RUN, or REJECTED_DRY_RUN</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_memcached_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_memcached_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_memcached_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$memcached_key</entry>
            <entry>Defines a key for obtaining response from a memcached server.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    
    
    
    <listitem><emphasis>ngx_http_proxy_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html"></link></para>
      <table frame="all"><title>ngx_http_proxy_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$proxy_host</entry>
            <entry>name and port of a proxied server as specified in the proxy_pass directive;</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$proxy_port</entry>
            <entry>port of a proxied server as specified in the proxy_pass directive, or the protocol’s default port;</entry>
          </row>
          <row>
            <entry>3</entry>
            <entry>$proxy_add_x_forwarded_for</entry>
            <entry>the “X-Forwarded-For” client request header field with the $remote_addr variable appended to it, separated by a comma. If the “X-Forwarded-For” field is not present in the client request header, the $proxy_add_x_forwarded_for variable is equal to the $remote_addr variable.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_realip_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_realip_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_realip_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$realip_remote_addr</entry>
            <entry>keeps the original client address (1.9.7)</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$realip_remote_port</entry>
            <entry>keeps the original client port (1.11.0)</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_referer_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_referer_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_referer_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$invalid_referer</entry>
            <entry>Empty string, if the “Referer” request header field value is considered valid, otherwise “1”.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_secure_link_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_secure_link_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$secure_link</entry>
            <entry>The status of a link check. The specific value depends on the selected operation mode.</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$secure_link_expires</entry>
            <entry>The lifetime of a link passed in a request; intended to be used only in the secure_link_md5 directive.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_session_log_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_session_log_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_session_log_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$session_log_id</entry>
            <entry>current session ID;</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$session_log_binary_id</entry>
            <entry>current session ID in binary form (16 bytes).</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_slice_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_slice_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_slice_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$slice_range</entry>
            <entry>the current slice range in HTTP byte range format, for example, bytes=0-1048575.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_spdy_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_spdy_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_spdy_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$spdy</entry>
            <entry>SPDY protocol version for SPDY connections, or an empty string otherwise;</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$spdy_request_priority</entry>
            <entry>request priority for SPDY connections, or an empty string otherwise.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_ssi_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_ssi_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_ssi_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$date_local</entry>
            <entry>current time in the local time zone. The format is set by the config command with the timefmt parameter.</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$date_gmt</entry>
            <entry>current time in GMT. The format is set by the config command with the timefmt parameter.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_ssl_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_ssl_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$ssl_cipher</entry>
            <entry>returns the name of the cipher used for an established SSL connection;</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$ssl_ciphers</entry>
            <entry>returns the list of ciphers supported by the client (1.11.7). Known ciphers are listed by names, unknown are shown in hexadecimal</entry>
          </row>
          <row>
            <entry>3</entry>
            <entry>$ssl_client_escaped_cert</entry>
            <entry>returns the client certificate in the PEM format (urlencoded) for an established SSL connection (1.13.5);</entry>
          </row>
          <row>
            <entry>4</entry>
            <entry>$ssl_client_cert</entry>
            <entry>returns the client certificate in the PEM format for an established SSL connection, with each line except the first prepended with the tab character; this is intended for the use in the proxy_set_header directive;</entry>
          </row>
          <row>
            <entry>5</entry>
            <entry>$ssl_client_fingerprint</entry>
            <entry>returns the SHA1 fingerprint of the client certificate for an established SSL connection (1.7.1);</entry>
          </row>
          <row>
            <entry>6</entry>
            <entry>$ssl_client_i_dn</entry>
            <entry>returns the “issuer DN” string of the client certificate for an established SSL connection according to RFC 2253 (1.11.6);</entry>
          </row>
          <row>
            <entry>7</entry>
            <entry>$ssl_client_i_dn_legacy</entry>
            <entry>returns the “issuer DN” string of the client certificate for an established SSL connection;</entry>
          </row>
          <row>
            <entry>8</entry>
            <entry>$ssl_client_raw_cert</entry>
            <entry>returns the client certificate in the PEM format for an established SSL connection;</entry>
          </row>
          <row>
            <entry>9</entry>
            <entry>$ssl_client_s_dn</entry>
            <entry>returns the “subject DN” string of the client certificate for an established SSL connection according to RFC 2253 (1.11.6);</entry>
          </row>
          <row>
            <entry>10</entry>
            <entry>$ssl_client_s_dn_legacy</entry>
            <entry>returns the “subject DN” string of the client certificate for an established SSL connection;</entry>
          </row>
          <row>
            <entry>11</entry>
            <entry>$ssl_client_serial</entry>
            <entry>returns the serial number of the client certificate for an established SSL connection;</entry>
          </row>
          <row>
            <entry>12</entry>
            <entry>$ssl_client_v_end</entry>
            <entry>returns the end date of the client certificate (1.11.7);</entry>
          </row>
          <row>
            <entry>13</entry>
            <entry>$ssl_client_v_remain</entry>
            <entry>returns the number of days until the client certificate expires (1.11.7);</entry>
          </row>
          <row>
            <entry>14</entry>
            <entry>$ssl_client_v_start</entry>
            <entry>returns the start date of the client certificate (1.11.7);</entry>
          </row>
          <row>
            <entry>15</entry>
            <entry>$ssl_client_verify</entry>
            <entry>returns the result of client certificate verification: “SUCCESS”, “FAILED:reason”, and “NONE” if a certificate was not present;</entry>
          </row>
          <row>
            <entry>16</entry>
            <entry>$ssl_curves</entry>
            <entry>returns the list of curves supported by the client (1.11.7). Known curves are listed by names, unknown are shown in hexadecimal, </entry>
          </row>
          <row>
            <entry>17</entry>
            <entry>$ssl_early_data</entry>
            <entry>returns “1” if TLS 1.3 early data is used and the handshake is not complete, otherwise “” (1.15.3).</entry>
          </row>
          <row>
            <entry>18</entry>
            <entry>$ssl_protocol</entry>
            <entry>returns the protocol of an established SSL connection;</entry>
          </row>
          <row>
            <entry>19</entry>
            <entry>$ssl_server_name</entry>
            <entry>returns the server name requested through SNI (1.7.0);</entry>
          </row>
          <row>
            <entry>20</entry>
            <entry>$ssl_session_id</entry>
            <entry>returns the session identifier of an established SSL connection;</entry>
          </row>
          <row>
            <entry>21</entry>
            <entry>$ssl_session_reused</entry>
            <entry>returns “r” if an SSL session was reused, or “.” otherwise (1.5.11).</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_stub_status_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_stub_status_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_stub_status_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$connections_active</entry>
            <entry>The current number of active client connections including Waiting connections.</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$connections_reading</entry>
            <entry>The current number of connections where nginx is reading the request header.</entry>
          </row>
          <row>
            <entry>3</entry>
            <entry>$connections_writing</entry>
            <entry>The current number of connections where nginx is writing the response back to the client.</entry>
          </row>
          <row>
            <entry>4</entry>
            <entry>$connections_waiting</entry>
            <entry>The current number of idle client connections waiting for a request.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_upstream_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_upstream_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$upstream_addr</entry>
            <entry>keeps the IP address and port, or the path to the UNIX-domain socket of the upstream server. If several servers were contacted during request processing, their addresses are separated by commas, e.g. “192.168.1.1:80, 192.168.1.2:80, unix:/tmp/sock”. If an internal redirect from one server group to another happens, initiated by “X-Accel-Redirect” or error_page, then the server addresses from different groups are separated by colons, e.g. “192.168.1.1:80, 192.168.1.2:80, unix:/tmp/sock : 192.168.10.1:80, 192.168.10.2:80”. If a server cannot be selected, the variable keeps the name of the server group.</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$upstream_bytes_received</entry>
            <entry>number of bytes received from an upstream server (1.11.4). Values from several connections are separated by commas and colons like addresses in the $upstream_addr variable.</entry>
          </row>
          <row>
            <entry>3</entry>
            <entry>$upstream_bytes_sent</entry>
            <entry>number of bytes sent to an upstream server (1.15.8). Values from several connections are separated by commas and colons like addresses in the $upstream_addr variable.</entry>
          </row>
          <row>
            <entry>4</entry>
            <entry>$upstream_cache_status</entry>
            <entry>keeps the status of accessing a response cache (0.8.3). The status can be either “MISS”, “BYPASS”, “EXPIRED”, “STALE”, “UPDATING”, “REVALIDATED”, or “HIT”.</entry>
          </row>
          <row>
            <entry>5</entry>
            <entry>$upstream_connect_time</entry>
            <entry>keeps time spent on establishing a connection with the upstream server (1.9.1); the time is kept in seconds with millisecond resolution. In case of SSL, includes time spent on handshake. Times of several connections are separated by commas and colons like addresses in the $upstream_addr variable.</entry>
          </row>
          <row>
            <entry>6</entry>
            <entry>$upstream_cookie_name</entry>
            <entry>cookie with the specified name sent by the upstream server in the “Set-Cookie” response header field (1.7.1). Only the cookies from the response of the last server are saved.</entry>
          </row>
          <row>
            <entry>7</entry>
            <entry>$upstream_header_time</entry>
            <entry>keeps time spent on receiving the response header from the upstream server (1.7.10); the time is kept in seconds with millisecond resolution. Times of several responses are separated by commas and colons like addresses in the $upstream_addr variable.</entry>
          </row>
          <row>
            <entry>8</entry>
            <entry>$upstream_http_name</entry>
            <entry>keep server response header fields. For example, the “Server” response header field is available through the $upstream_http_server variable. The rules of converting header field names to variable names are the same as for the variables that start with the “$http_” prefix. Only the header fields from the response of the last server are saved.</entry>
          </row>
          <row>
            <entry>9</entry>
            <entry>$upstream_queue_time</entry>
            <entry>keeps time the request spent in the upstream queue (1.13.9); the time is kept in seconds with millisecond resolution. Times of several responses are separated by commas and colons like addresses in the $upstream_addr variable.</entry>
          </row>
          <row>
            <entry>10</entry>
            <entry>$upstream_response_length</entry>
            <entry>keeps the length of the response obtained from the upstream server (0.7.27); the length is kept in bytes. Lengths of several responses are separated by commas and colons like addresses in the $upstream_addr variable.</entry>
          </row>
          <row>
            <entry>11</entry>
            <entry>$upstream_response_time</entry>
            <entry>keeps time spent on receiving the response from the upstream server; the time is kept in seconds with millisecond resolution. Times of several responses are separated by commas and colons like addresses in the $upstream_addr variable.</entry>
          </row>
          <row>
            <entry>12</entry>
            <entry>$upstream_status</entry>
            <entry>keeps status code of the response obtained from the upstream server. Status codes of several responses are separated by commas and colons like addresses in the $upstream_addr variable. If a server cannot be selected, the variable keeps the 502 (Bad Gateway) status code.</entry>
          </row>
          <row>
            <entry>13</entry>
            <entry>$upstream_trailer_name</entry>
            <entry>keeps fields from the end of the response obtained from the upstream server (1.13.10).</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_userid_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_userid_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_userid_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$uid_got</entry>
            <entry>The cookie name and received client identifier.</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$uid_reset</entry>
            <entry>If the variable is set to a non-empty string that is not “0”, the client identifiers are reset. The special value “log” additionally leads to the output of messages about the reset identifiers to the error_log.</entry>
          </row>
          <row>
            <entry>3</entry>
            <entry>$uid_set</entry>
            <entry>The cookie name and sent client identifier.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_http_v2_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/http/ngx_http_v2_module.html#variables"></link></para>
      <table frame="all"><title>ngx_http_v2_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$http2</entry>
            <entry>negotiated protocol identifier: “h2” for HTTP/2 over TLS, “h2c” for HTTP/2 over cleartext TCP, or an empty string otherwise.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_stream_core_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/stream/ngx_stream_core_module.html#variables"></link></para>
      <table frame="all"><title>ngx_stream_core_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$binary_remote_addr</entry>
            <entry>client address in a binary form, value’s length is always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$bytes_received</entry>
            <entry>number of bytes received from a client (1.11.4)</entry>
          </row>
          <row>
            <entry>3</entry>
            <entry>$bytes_sent</entry>
            <entry>number of bytes sent to a client</entry>
          </row>
          <row>
            <entry>4</entry>
            <entry>$connection</entry>
            <entry>connection serial number</entry>
          </row>
          <row>
            <entry>5</entry>
            <entry>$hostname</entry>
            <entry>host name</entry>
          </row>
          <row>
            <entry>6</entry>
            <entry>$msec</entry>
            <entry>current time in seconds with the milliseconds resolution</entry>
          </row>
          <row>
            <entry>7</entry>
            <entry>$nginx_version</entry>
            <entry>nginx version</entry>
          </row>
          <row>
            <entry>8</entry>
            <entry>$pid</entry>
            <entry>PID of the worker process</entry>
          </row>
          <row>
            <entry>9</entry>
            <entry>$protocol</entry>
            <entry>protocol used to communicate with the client: TCP or UDP (1.11.4)</entry>
          </row>
          <row>
            <entry>10</entry>
            <entry>$proxy_protocol_addr</entry>
            <entry>client address from the PROXY protocol header (1.11.4). The PROXY protocol must be previously enabled by setting the proxy_protocol parameter in the listen directive.</entry>
          </row>
          <row>
            <entry>11</entry>
            <entry>$proxy_protocol_port</entry>
            <entry>client port from the PROXY protocol header (1.11.4) .The PROXY protocol must be previously enabled by setting the proxy_protocol parameter in the listen directive.</entry>
          </row>
          <row>
            <entry>12</entry>
            <entry>$proxy_protocol_server_addr</entry>
            <entry>server address from the PROXY protocol header (1.17.6) .The PROXY protocol must be previously enabled by setting the proxy_protocol parameter in the listen directive.</entry>
          </row>
          <row>
            <entry>13</entry>
            <entry>$proxy_protocol_server_port</entry>
            <entry>server port from the PROXY protocol header (1.17.6) .The PROXY protocol must be previously enabled by setting the proxy_protocol parameter in the listen directive.</entry>
          </row>
          <row>
            <entry>14</entry>
            <entry>$remote_addr</entry>
            <entry>client address</entry>
          </row>
          <row>
            <entry>15</entry>
            <entry>$remote_port</entry>
            <entry>client port</entry>
          </row>
          <row>
            <entry>16</entry>
            <entry>$server_addr</entry>
            <entry>an address of the server which accepted a connection .Computing a value of this variable usually requires one system call. To avoid a system call, the listen directives must specify addresses and use the bind parameter.</entry>
          </row>
          <row>
            <entry>17</entry>
            <entry>$server_port</entry>
            <entry>port of the server which accepted a connection</entry>
          </row>
          <row>
            <entry>18</entry>
            <entry>$session_time</entry>
            <entry>session duration in seconds with a milliseconds resolution (1.11.4);</entry>
          </row>
          <row>
            <entry>19</entry>
            <entry>$status</entry>
            <entry>
session status (1.11.4), can be one of the following:
200
session completed successfully
400
client data could not be parsed, for example, the PROXY protocol header
403
access forbidden, for example, when access is limited for certain client addresses
500
internal server error
502
bad gateway, for example, if an upstream server could not be selected or reached.
503
service unavailable, for example, when access is limited by the number of connections</entry>
          </row>
          <row>
            <entry>20</entry>
            <entry>$time_iso8601</entry>
            <entry>local time in the ISO 8601 standard format</entry>
          </row>
          <row>
            <entry>21</entry>
            <entry>$time_local</entry>
            <entry>local time in the Common Log Format</entry>
          </row>
          
         </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_stream_limit_conn_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/stream/ngx_stream_limit_conn_module.html#variables"></link></para>
      <table frame="all"><title>ngx_stream_limit_conn_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$limit_conn_status</entry>
            <entry>keeps the result of limiting the number of connections (1.17.6): PASSED, REJECTED, or REJECTED_DRY_RUN</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    
    <listitem><emphasis>ngx_stream_realip_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/stream/ngx_stream_realip_module.html#variables"></link></para>
      <table frame="all"><title>ngx_stream_realip_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>          
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$realip_remote_addr</entry>
            <entry>keeps the original client address</entry>
          </row>
          <row>
            <entry>1</entry>
            <entry>$realip_remote_port</entry>
            <entry>keeps the original client port</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_stream_ssl_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#variables"></link></para>
      <table frame="all"><title>ngx_stream_ssl_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$ssl_cipher</entry>
            <entry>returns the name of the cipher used for an established SSL connection;</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$ssl_ciphers </entry>
            <entry>returns the list of ciphers supported by the client (1.11.7). Known ciphers are listed by names, unknown are shown in hexadecimal,</entry>
          </row>
          <row>
            <entry>3</entry>
            <entry>$ssl_client_cert</entry>
            <entry>returns the client certificate in the PEM format for an established SSL connection, with each line except the first prepended with the tab character (1.11.8);</entry>
          </row>
          <row>
            <entry>4</entry>
            <entry>$ssl_client_fingerprint</entry>
            <entry>returns the SHA1 fingerprint of the client certificate for an established SSL connection (1.11.8);</entry>
          </row>
          <row>
            <entry>5</entry>
            <entry>$ssl_client_i_dn</entry>
            <entry>returns the “issuer DN” string of the client certificate for an established SSL connection according to RFC 2253 (1.11.8);</entry>
          </row>
          <row>
            <entry>6</entry>
            <entry>$ssl_client_raw_cert</entry>
            <entry>returns the client certificate in the PEM format for an established SSL connection (1.11.8);</entry>
          </row>
          <row>
            <entry>7</entry>
            <entry>$ssl_client_s_dn</entry>
            <entry>returns the “subject DN” string of the client certificate for an established SSL connection according to RFC 2253 (1.11.8);</entry>
          </row>
          <row>
            <entry>8</entry>
            <entry>$ssl_client_serial</entry>
            <entry>returns the serial number of the client certificate for an established SSL connection (1.11.8);</entry>
          </row>
          <row>
            <entry>9</entry>
            <entry>$ssl_client_v_end</entry>
            <entry>returns the end date of the client certificate (1.11.8);</entry>
          </row>
          <row>
            <entry>10</entry>
            <entry>$ssl_client_v_remain$ssl_client_v_remain</entry>
            <entry>returns the number of days until the client certificate expires (1.11.8);</entry>
          </row>
          <row>
            <entry>11</entry>
            <entry>$ssl_client_v_start</entry>
            <entry>returns the start date of the client certificate (1.11.8);</entry>
          </row>
          <row>
            <entry>12</entry>
            <entry>$ssl_client_verify</entry>
            <entry>returns the result of client certificate verification (1.11.8): “SUCCESS”, “FAILED:reason”, and “NONE” if a certificate was not present;</entry>
          </row>
          <row>
            <entry>13</entry>
            <entry>$ssl_curves</entry>
            <entry>returns the list of curves supported by the client (1.11.7). Known curves are listed by names, unknown are shown in hexadecimal, </entry>
          </row>
          <row>
            <entry>14</entry>
            <entry>$ssl_protocol</entry>
            <entry>returns the protocol of an established SSL connection;</entry>
          </row>
          <row>
            <entry>15</entry>
            <entry>$ssl_server_name</entry>
            <entry>returns the server name requested through SNI;</entry>
          </row>
          <row>
            <entry>16</entry>
            <entry>$ssl_session_id</entry>
            <entry>returns the session identifier of an established SSL connection;</entry>
          </row>
          <row>
            <entry>17</entry>
            <entry>$ssl_session_reused</entry>
            <entry>returns “r” if an SSL session was reused, or “.” otherwise.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_stream_ssl_preread_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/stream/ngx_stream_ssl_preread_module.html#variables"></link></para>
      <table frame="all"><title>ngx_stream_ssl_preread_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$ssl_preread_protocol</entry>
            <entry>the highest SSL protocol version supported by the client (1.15.2)</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$ssl_preread_server_name</entry>
            <entry>server name requested through SNI</entry>
          </row>
          <row>
            <entry>3</entry>
            <entry>$ssl_preread_alpn_protocols</entry>
            <entry>list of protocols advertised by the client through ALPN (1.13.10). The values are separated by commas.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
    <listitem><emphasis>ngx_stream_upstream_module中的变量</emphasis>  
      <para><link xlink:href="https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#variables"></link></para>
      <table frame="all"><title>ngx_stream_upstream_module中的变量</title>
        <tgroup cols="3" align="left">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="4*"/>
        <colspec colnum="3" colname="c3" colwidth="8*"/>    
        <thead>
          <row><?dbfo bgcolor="#EEEEEE" ?>
            <entry align="center">序号</entry>
            <entry align="center">名称</entry>
            <entry align="center">描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>$upstream_addr</entry>
            <entry>keeps the IP address and port, or the path to the UNIX-domain socket of the upstream server (1.11.4). If several servers were contacted during proxying, their addresses are separated by commas, e.g. “192.168.1.1:12345, 192.168.1.2:12345, unix:/tmp/sock”. If a server cannot be selected, the variable keeps the name of the server group.</entry>
          </row>
          <row>
            <entry>2</entry>
            <entry>$upstream_bytes_received</entry>
            <entry>number of bytes received from an upstream server (1.11.4). Values from several connections are separated by commas like addresses in the $upstream_addr variable.</entry>
          </row>
          <row>
            <entry>3</entry>
            <entry>$upstream_bytes_sent</entry>
            <entry>number of bytes sent to an upstream server (1.11.4). Values from several connections are separated by commas like addresses in the $upstream_addr variable.</entry>
          </row>
          <row>
            <entry>4</entry>
            <entry>$upstream_connect_time</entry>
            <entry>time to connect to the upstream server (1.11.4); the time is kept in seconds with millisecond resolution. Times of several connections are separated by commas like addresses in the $upstream_addr variable.</entry>
          </row>
          <row>
            <entry>5</entry>
            <entry>$upstream_first_byte_time</entry>
            <entry>time to receive the first byte of data (1.11.4); the time is kept in seconds with millisecond resolution. Times of several connections are separated by commas like addresses in the $upstream_addr variable.</entry>
          </row>
          <row>
            <entry>6</entry>
            <entry>$upstream_session_time</entry>
            <entry>session duration in seconds with millisecond resolution (1.11.4). Times of several connections are separated by commas like addresses in the $upstream_addr variable.</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </listitem>
    
  </orderedlist>
</appendix>
